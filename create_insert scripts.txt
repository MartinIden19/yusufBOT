create table student
(
    sid      integer     not null
        constraint pk_student
            primary key,
    name    varchar(50) not null,
    surname varchar(50) not null,
    idzach  varchar(20) not null,
    idgrou  varchar(10) not null,
    age     integer
);

create table teacher
(
    tid      integer     not null
        constraint pk_teacher
            primary key,
    name    varchar(50) not null,
    surname varchar(50) not null
);

create table student_course
(
    student_id integer not null
        constraint fk_student_course_s
            references student,
    course_id  integer not null
        constraint fk_student_course_c
            references course,
    constraint pk_student_course
        primary key (student_id, course_id)
);

create table teacher_course
(
    teacher_id integer not null
        constraint fk_teacher_course_t
            references teacher,
    course_id  integer not null
        constraint fk_teacher_course_c
            references course,
    constraint pk_teacher_course
        primary key (teacher_id, course_id)
);

create table course
(
    id   integer generated by default as identity
        constraint pk_course
            primary key,
    name varchar(50) not null,
    pass integer     not null
        constraint course_pass_key
            unique
);

create table journal
(
    sid        integer                                        not null
        constraint journal_student_id_fk
            references student,
    cid        integer                                        not null
        constraint journal_course_id_fk
            references course,
    jdate      timestamp default timezone('utc'::text, now()) not null,
    mark       integer,
    attendance varchar(1),
    homework varchar(255),
    work_completed int,
    constraint pk_journal
        primary key (sid, cid, jdate)
);


alter table teacher_course enable_constraints constraint fk_teacher_course_t
;

alter table teacher_course enable_constraints constraint fk_teacher_course_c
;

alter table student_course enable_constraints constraint fk_student_course_s
;

alter table student_course enable_constraints constraint fk_student_course_c
;

alter table journal enable_constraints constraint journal_student_id_fk
;

alter table journal enable_constraints constraint journal_course_id_fk
;

insert into "pacanSchema".course(name, pass) values ('Algebra', 123);
insert into "pacanSchema".course(name, pass) values ('Geometry', 321

insert into "pacanSchema".student(id, name, surname, idzach, idgrou, age) VALUES (1, 'Yusuf', 'Zarifyanov', '123', '09-812', 19);
insert into "pacanSchema".student(id, name, surname, idzach, idgrou, age) VALUES (2, 'Vladimir', 'Biktimirov', '234', '09-812', 20);
insert into "pacanSchema".student(id, name, surname, idzach, idgrou, age) VALUES (3, 'Nikita', 'Chernov', '345', '09-812', 20);
insert into "pacanSchema".student(id, name, surname, idzach, idgrou, age) VALUES (4, 'Danil', 'Efimov', '456', '09-812', 20);
insert into "pacanSchema".student(id, name, surname, idzach, idgrou, age) VALUES (5,'Pavel', 'Gavrilichev', '567', '09-812', 20);

insert into "pacanSchema".teacher(id, name, surname) VALUES (1, 'Andrey', 'Popov');
insert into "pacanSchema".teacher(id, name, surname) VALUES (2, 'Ilya', 'Germanovich');


insert into "pacanSchema".student_course(student_id, course_id) VALUES (1, 1);
insert into "pacanSchema".student_course(student_id, course_id) VALUES (1, 2);
insert into "pacanSchema".student_course(student_id, course_id) VALUES (2,2);
insert into "pacanSchema".student_course(student_id, course_id) VALUES (3,1);
insert into "pacanSchema".student_course(student_id, course_id) VALUES (4,2);
insert into "pacanSchema".student_course(student_id, course_id) VALUES (5,1);
insert into "pacanSchema".student_course(student_id, course_id) VALUES (5,2);

insert into "pacanSchema".teacher_course(teacher_id, course_id) VALUES (1,1);
insert into "pacanSchema".teacher_course(teacher_id, course_id) VALUES (2,2);

insert into "pacanSchema".journal(sid, cid, mark, attendance, homework, work_completed) VALUES (1, 1, 2, 'n', 'print hello world!', 0);



